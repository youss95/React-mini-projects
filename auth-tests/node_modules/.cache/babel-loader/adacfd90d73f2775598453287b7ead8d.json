{"ast":null,"code":"var _jsxFileName = \"/Users/sayongkim/Documents/react-projects/auth-tests/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    const email = emailInputRef.current.value;\n    const password = passwordInputRef.current.value;\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD_QepXNq_Fxe5EkmUQroULB6m269QxBZg\";\n    } else {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD_QepXNq_Fxe5EkmUQroULB6m269QxBZg\";\n    }\n\n    try {\n      const authState = await axios.post(url, {\n        email: email,\n        password: password,\n        returnSecureToken: true\n      });\n      console.log(\"a\", authState);\n    } catch (e) {\n      let errMsg = e.response.data.error.message; //console.log(errMsg);\n      // alert(errMsg);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"white\"\n          },\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"d/Yp60IAdopX50HMKwXJej2Rb3E=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useRef","useState","axios","classes","AuthForm","isLogin","setIsLogin","isLoading","setIsLoading","emailInputRef","passwordInputRef","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","email","current","value","password","url","authState","post","returnSecureToken","console","log","e","errMsg","response","data","error","message","auth","control","actions","color","toggle"],"sources":["/Users/sayongkim/Documents/react-projects/auth-tests/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    const email = emailInputRef.current.value;\n    const password = passwordInputRef.current.value;\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD_QepXNq_Fxe5EkmUQroULB6m269QxBZg\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD_QepXNq_Fxe5EkmUQroULB6m269QxBZg\";\n    }\n    try {\n      const authState = await axios.post(url, {\n        email: email,\n        password: password,\n        returnSecureToken: true,\n      });\n      console.log(\"a\", authState);\n    } catch (e) {\n      let errMsg = e.response.data.error.message;\n      //console.log(errMsg);\n      // alert(errMsg);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p style={{ color: \"white\" }}>Loading...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}