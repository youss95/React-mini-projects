{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nconst LOGIN = \"auth/login\";\nconst LOGOUT = \"auth/logout\";\nconst isLoggedIn = !!localStorage.getItem(\"token\");\nconst initialState = {\n  token: \"\",\n  isLoggedIn: isLoggedIn\n};\n\nconst calculateTime = time => {\n  const currentTime = new Date().getTime();\n  const adjTime = new Date(time).getTime();\n  const remainTime = adjTime - currentTime;\n  return remainTime;\n};\n\nlet logoutTimer; //시간이 오래되면 토큰을 재설정\n\nconst retrieveStoredToken = () => {\n  const storeToken = localStorage.getItem(\"token\");\n  const storedExDate = localStorage.getItem(\"exTime\");\n  const remainingTime = calculateTime(storedExDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"exTime\");\n    return null;\n  }\n\n  return {\n    token: storeToken,\n    duration: remainingTime\n  };\n};\n\nexport const logoutTest = createAction(LOGOUT, () => {\n  localStorage.removeItem(\"token\");\n\n  if (logoutTimer) {\n    clearTimeout(logoutTimer);\n  }\n});\nexport const loginTest = createAction(LOGIN, (token, time) => {\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"exTime\", time);\n  const remainTime = calculateTime(time);\n  logoutTimer = setTimeout(logoutTest, remainTime);\n  return token;\n});\nconst auth = handleActions({\n  [LOGIN]: (state, action) => ({ ...state,\n    token: action.payload,\n    isLoggedIn: !!action.payload\n  }),\n  [LOGOUT]: (state, action) => ({ ...state,\n    token: \"\",\n    isLoggedIn: false\n  })\n}, initialState);\nexport default auth;","map":{"version":3,"names":["createAction","handleActions","LOGIN","LOGOUT","isLoggedIn","localStorage","getItem","initialState","token","calculateTime","time","currentTime","Date","getTime","adjTime","remainTime","logoutTimer","retrieveStoredToken","storeToken","storedExDate","remainingTime","removeItem","duration","logoutTest","clearTimeout","loginTest","setItem","setTimeout","auth","state","action","payload"],"sources":["/Users/sayongkim/Documents/react-projects/auth-tests/src/moduels/auth.js"],"sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nconst LOGIN = \"auth/login\";\nconst LOGOUT = \"auth/logout\";\nconst isLoggedIn = !!localStorage.getItem(\"token\");\nconst initialState = {\n  token: \"\",\n  isLoggedIn: isLoggedIn,\n};\nconst calculateTime = (time) => {\n  const currentTime = new Date().getTime();\n  const adjTime = new Date(time).getTime();\n  const remainTime = adjTime - currentTime;\n\n  return remainTime;\n};\nlet logoutTimer;\n//시간이 오래되면 토큰을 재설정\nconst retrieveStoredToken = () => {\n  const storeToken = localStorage.getItem(\"token\");\n  const storedExDate = localStorage.getItem(\"exTime\");\n  const remainingTime = calculateTime(storedExDate);\n  if (remainingTime <= 3600) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"exTime\");\n    return null;\n  }\n  return {\n    token: storeToken,\n    duration: remainingTime,\n  };\n};\nexport const logoutTest = createAction(LOGOUT, () => {\n  localStorage.removeItem(\"token\");\n  if (logoutTimer) {\n    clearTimeout(logoutTimer);\n  }\n});\n\nexport const loginTest = createAction(LOGIN, (token, time) => {\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"exTime\", time);\n  const remainTime = calculateTime(time);\n  logoutTimer = setTimeout(logoutTest, remainTime);\n  return token;\n});\n\nconst auth = handleActions(\n  {\n    [LOGIN]: (state, action) => ({\n      ...state,\n      token: action.payload,\n      isLoggedIn: !!action.payload,\n    }),\n    [LOGOUT]: (state, action) => ({\n      ...state,\n      token: \"\",\n      isLoggedIn: false,\n    }),\n  },\n  initialState\n);\n\nexport default auth;\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,MAAMC,KAAK,GAAG,YAAd;AACA,MAAMC,MAAM,GAAG,aAAf;AACA,MAAMC,UAAU,GAAG,CAAC,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBJ,UAAU,EAAEA;AAFO,CAArB;;AAIA,MAAMK,aAAa,GAAIC,IAAD,IAAU;EAC9B,MAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;EACA,MAAMC,OAAO,GAAG,IAAIF,IAAJ,CAASF,IAAT,EAAeG,OAAf,EAAhB;EACA,MAAME,UAAU,GAAGD,OAAO,GAAGH,WAA7B;EAEA,OAAOI,UAAP;AACD,CAND;;AAOA,IAAIC,WAAJ,C,CACA;;AACA,MAAMC,mBAAmB,GAAG,MAAM;EAChC,MAAMC,UAAU,GAAGb,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAnB;EACA,MAAMa,YAAY,GAAGd,YAAY,CAACC,OAAb,CAAqB,QAArB,CAArB;EACA,MAAMc,aAAa,GAAGX,aAAa,CAACU,YAAD,CAAnC;;EACA,IAAIC,aAAa,IAAI,IAArB,EAA2B;IACzBf,YAAY,CAACgB,UAAb,CAAwB,OAAxB;IACAhB,YAAY,CAACgB,UAAb,CAAwB,QAAxB;IACA,OAAO,IAAP;EACD;;EACD,OAAO;IACLb,KAAK,EAAEU,UADF;IAELI,QAAQ,EAAEF;EAFL,CAAP;AAID,CAbD;;AAcA,OAAO,MAAMG,UAAU,GAAGvB,YAAY,CAACG,MAAD,EAAS,MAAM;EACnDE,YAAY,CAACgB,UAAb,CAAwB,OAAxB;;EACA,IAAIL,WAAJ,EAAiB;IACfQ,YAAY,CAACR,WAAD,CAAZ;EACD;AACF,CALqC,CAA/B;AAOP,OAAO,MAAMS,SAAS,GAAGzB,YAAY,CAACE,KAAD,EAAQ,CAACM,KAAD,EAAQE,IAAR,KAAiB;EAC5DL,YAAY,CAACqB,OAAb,CAAqB,OAArB,EAA8BlB,KAA9B;EACAH,YAAY,CAACqB,OAAb,CAAqB,QAArB,EAA+BhB,IAA/B;EACA,MAAMK,UAAU,GAAGN,aAAa,CAACC,IAAD,CAAhC;EACAM,WAAW,GAAGW,UAAU,CAACJ,UAAD,EAAaR,UAAb,CAAxB;EACA,OAAOP,KAAP;AACD,CANoC,CAA9B;AAQP,MAAMoB,IAAI,GAAG3B,aAAa,CACxB;EACE,CAACC,KAAD,GAAS,CAAC2B,KAAD,EAAQC,MAAR,MAAoB,EAC3B,GAAGD,KADwB;IAE3BrB,KAAK,EAAEsB,MAAM,CAACC,OAFa;IAG3B3B,UAAU,EAAE,CAAC,CAAC0B,MAAM,CAACC;EAHM,CAApB,CADX;EAME,CAAC5B,MAAD,GAAU,CAAC0B,KAAD,EAAQC,MAAR,MAAoB,EAC5B,GAAGD,KADyB;IAE5BrB,KAAK,EAAE,EAFqB;IAG5BJ,UAAU,EAAE;EAHgB,CAApB;AANZ,CADwB,EAaxBG,YAbwB,CAA1B;AAgBA,eAAeqB,IAAf"},"metadata":{},"sourceType":"module"}