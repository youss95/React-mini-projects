{"ast":null,"code":"import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport isSymbol from './utils/isSymbol';\nimport isEmpty from './utils/isEmpty';\nimport toString from './utils/toString';\nimport isString from './utils/isString';\nimport { ACTION_TYPE_DELIMITER } from './constants';\n\nfunction isValidActionType(type) {\n  return isString(type) || isFunction(type) || isSymbol(type);\n}\n\nfunction isValidActionTypes(types) {\n  if (isEmpty(types)) {\n    return false;\n  }\n\n  return types.every(isValidActionType);\n}\n\nexport default function combineActions() {\n  for (var _len = arguments.length, actionsTypes = new Array(_len), _key = 0; _key < _len; _key++) {\n    actionsTypes[_key] = arguments[_key];\n  }\n\n  invariant(isValidActionTypes(actionsTypes), 'Expected action types to be strings, symbols, or action creators');\n  var combinedActionType = actionsTypes.map(toString).join(ACTION_TYPE_DELIMITER);\n  return {\n    toString: function toString() {\n      return combinedActionType;\n    }\n  };\n}","map":{"version":3,"names":["invariant","isFunction","isSymbol","isEmpty","toString","isString","ACTION_TYPE_DELIMITER","isValidActionType","type","isValidActionTypes","types","every","combineActions","_len","arguments","length","actionsTypes","Array","_key","combinedActionType","map","join"],"sources":["/Users/sayongkim/Documents/react-projects/auth-tests/node_modules/redux-actions/es/combineActions.js"],"sourcesContent":["import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport isSymbol from './utils/isSymbol';\nimport isEmpty from './utils/isEmpty';\nimport toString from './utils/toString';\nimport isString from './utils/isString';\nimport { ACTION_TYPE_DELIMITER } from './constants';\n\nfunction isValidActionType(type) {\n  return isString(type) || isFunction(type) || isSymbol(type);\n}\n\nfunction isValidActionTypes(types) {\n  if (isEmpty(types)) {\n    return false;\n  }\n\n  return types.every(isValidActionType);\n}\n\nexport default function combineActions() {\n  for (var _len = arguments.length, actionsTypes = new Array(_len), _key = 0; _key < _len; _key++) {\n    actionsTypes[_key] = arguments[_key];\n  }\n\n  invariant(isValidActionTypes(actionsTypes), 'Expected action types to be strings, symbols, or action creators');\n  var combinedActionType = actionsTypes.map(toString).join(ACTION_TYPE_DELIMITER);\n  return {\n    toString: function toString() {\n      return combinedActionType;\n    }\n  };\n}"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,qBAAT,QAAsC,aAAtC;;AAEA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;EAC/B,OAAOH,QAAQ,CAACG,IAAD,CAAR,IAAkBP,UAAU,CAACO,IAAD,CAA5B,IAAsCN,QAAQ,CAACM,IAAD,CAArD;AACD;;AAED,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;EACjC,IAAIP,OAAO,CAACO,KAAD,CAAX,EAAoB;IAClB,OAAO,KAAP;EACD;;EAED,OAAOA,KAAK,CAACC,KAAN,CAAYJ,iBAAZ,CAAP;AACD;;AAED,eAAe,SAASK,cAAT,GAA0B;EACvC,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,YAAY,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAA5C,EAA6DK,IAAI,GAAG,CAAzE,EAA4EA,IAAI,GAAGL,IAAnF,EAAyFK,IAAI,EAA7F,EAAiG;IAC/FF,YAAY,CAACE,IAAD,CAAZ,GAAqBJ,SAAS,CAACI,IAAD,CAA9B;EACD;;EAEDlB,SAAS,CAACS,kBAAkB,CAACO,YAAD,CAAnB,EAAmC,kEAAnC,CAAT;EACA,IAAIG,kBAAkB,GAAGH,YAAY,CAACI,GAAb,CAAiBhB,QAAjB,EAA2BiB,IAA3B,CAAgCf,qBAAhC,CAAzB;EACA,OAAO;IACLF,QAAQ,EAAE,SAASA,QAAT,GAAoB;MAC5B,OAAOe,kBAAP;IACD;EAHI,CAAP;AAKD"},"metadata":{},"sourceType":"module"}